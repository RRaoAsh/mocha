{
  "stats": {
    "suites": 5,
    "tests": 28,
    "passes": 12,
    "pending": 0,
    "failures": 16,
    "start": "2021-06-09T07:50:29.803Z",
    "end": "2021-06-09T07:51:05.510Z",
    "duration": 35707,
    "testsRegistered": 28,
    "passPercent": 42.857142857142854,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dd6ffbf2-0cfa-4ff5-90bf-8a4c461d2420",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1df01fb7-5a48-44ee-a17b-46cf77ce56be",
          "title": "POST dev/getprofile",
          "fullFile": "/Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js",
          "file": "/test/test1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return error(401) if only authorization sent",
              "fullTitle": "POST dev/getprofile Return error(401) if only authorization sent",
              "timedOut": false,
              "duration": 1609,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const task = {\n    authorization: process.env.AUTHORIZATION,\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .post(\"/dev/getprofile\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(401);\n    done();\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 401 but got 403",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 401 but got 403\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:32:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 403\n+ 401\n"
              },
              "uuid": "f30eaf2d-9c34-4a5d-a530-5c7f014ad533",
              "parentUUID": "1df01fb7-5a48-44ee-a17b-46cf77ce56be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f30eaf2d-9c34-4a5d-a530-5c7f014ad533"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1609,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "672152c3-2834-4b4f-adde-2a3891f637a9",
          "title": "Profile API's",
          "fullFile": "/Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js",
          "file": "/test/test1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return error(403) if only Accesstoken  sent",
              "fullTitle": "Profile API's Return error(403) if only Accesstoken  sent",
              "timedOut": false,
              "duration": 124,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const task = {\n    accesstoken: process.env.ACCESSTOKEN,\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .post(\"/dev/getprofile\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(403);\n    done();\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 401\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:50:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 401\n+ 403\n"
              },
              "uuid": "6890ccc0-634c-41b0-a68d-20e3a7dd01a5",
              "parentUUID": "672152c3-2834-4b4f-adde-2a3891f637a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return error(401) if null value is sent for both Accesstoken and Authorization value ",
              "fullTitle": "Profile API's Return error(401) if null value is sent for both Accesstoken and Authorization value ",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const task = {\n    authorization: \"\",\n    accesstoken: \"\",\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .post(\"/dev/getprofile\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(401);\n    done();\n    });",
              "err": {},
              "uuid": "14fc1c3f-7d21-4547-af2d-4604531fc81c",
              "parentUUID": "672152c3-2834-4b4f-adde-2a3891f637a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return Success when both valid authorization and accesstoken sent",
              "fullTitle": "Profile API's Return Success when both valid authorization and accesstoken sent",
              "timedOut": false,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const task = {\n    authorization: process.env.AUTHORIZATION,\n    accesstoken: process.env.ACCESSTOKEN,\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .get(\"/dev/getprofile\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(200);\n    done();\n    });",
              "err": {},
              "uuid": "32a8b329-1cf4-4b14-a53d-638b1a5f994a",
              "parentUUID": "672152c3-2834-4b4f-adde-2a3891f637a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14fc1c3f-7d21-4547-af2d-4604531fc81c",
            "32a8b329-1cf4-4b14-a53d-638b1a5f994a"
          ],
          "failures": [
            "6890ccc0-634c-41b0-a68d-20e3a7dd01a5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "88cfa0c3-0c54-466c-9a59-5536fbbd6884",
          "title": "POST dev/-auth-check/getusers",
          "fullFile": "/Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js",
          "file": "/test/test1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Return Success when authorization sent",
              "fullTitle": "POST dev/-auth-check/getusers Return Success when authorization sent",
              "timedOut": false,
              "duration": 142,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const task = {\n    authorization: process.env.AUTHORIZATION,\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .post(\"/dev/-auth-check/getusers\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(200);\n    done();\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 200 but got 401\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:100:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 401\n+ 200\n"
              },
              "uuid": "ca3c5891-3887-4dcf-9f9f-9aa91d925c57",
              "parentUUID": "88cfa0c3-0c54-466c-9a59-5536fbbd6884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Return Error when authorization value is not sent",
              "fullTitle": "POST dev/-auth-check/getusers Return Error when authorization value is not sent",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const task = {\n    authorization: \"\",\n    completed: false\n};\nchai.request(process.env.BASEURL)                \n    .post(\"/dev/-auth-check/getusers\")\n    .set(task)\n    .end((err, response) => {\n        response.should.have.status(401);\n    done();\n    });",
              "err": {},
              "uuid": "18276cbd-7349-4355-9676-aa7c3444c42c",
              "parentUUID": "88cfa0c3-0c54-466c-9a59-5536fbbd6884",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18276cbd-7349-4355-9676-aa7c3444c42c"
          ],
          "failures": [
            "ca3c5891-3887-4dcf-9f9f-9aa91d925c57"
          ],
          "pending": [],
          "skipped": [],
          "duration": 251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83dff358-1820-4572-b996-c74c82e69eec",
          "title": "Task API's",
          "fullFile": "/Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js",
          "file": "/test/test1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should GET all the tasks",
              "fullTitle": "Task API's It should GET all the tasks",
              "timedOut": false,
              "duration": 1745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)\n    .get(\"/dev/get-tasks\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        \n    done();\n    });",
              "err": {},
              "uuid": "46e40954-263d-4ea8-aed6-b4ae3f2ebc32",
              "parentUUID": "83dff358-1820-4572-b996-c74c82e69eec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should GET list of actions for a task",
              "fullTitle": "Task API's It should GET list of actions for a task",
              "timedOut": false,
              "duration": 1871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)\n    .get(\"/dev/get-duty-actions?dutyId=2\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        \n    done();\n    });",
              "err": {},
              "uuid": "86a417be-7d3f-45ee-9d63-94d79fb1dde6",
              "parentUUID": "83dff358-1820-4572-b996-c74c82e69eec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46e40954-263d-4ea8-aed6-b4ae3f2ebc32",
            "86a417be-7d3f-45ee-9d63-94d79fb1dde6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3616,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
          "title": "Ephemeral Team API's",
          "fullFile": "/Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js",
          "file": "/test/test1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should GET all Ephemeral Teams",
              "fullTitle": "Ephemeral Team API's It should GET all Ephemeral Teams",
              "timedOut": false,
              "duration": 1707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)\n    .get(\"/dev/get-ephemeral-teams\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        \n    done();\n    });",
              "err": {},
              "uuid": "c13c7e44-cc0f-4b8a-a67b-07f4b211577f",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Success when existing field values are sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Success when existing field values are sent",
              "timedOut": false,
              "duration": 1707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n    .post(\"/dev/photo-task\")\n    .set(add_a_photo.validValues)\n    .end((err, response) => {\n        response.should.have.status(200);\n    done();\n    });",
              "err": {},
              "uuid": "d48d735e-4a77-4e49-bce8-35a57c2620f0",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when invalid field values are sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when invalid field values are sent",
              "timedOut": false,
              "duration": 1476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n    .post(\"/dev/photo-task\")\n    .set(add_a_photo.inValidValues)\n    .end((err, response) => {\n        response.should.have.status(401);\n    done();\n    });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 401 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 401 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:172:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 401\n"
              },
              "uuid": "6e930350-725d-4b61-88cb-e34c4c4b95ca",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when photo field is empty",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when photo field is empty",
              "timedOut": false,
              "duration": 1455,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.photoValueNull)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:184:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "52a0153e-b14c-40d4-a2e7-e2b652414da9",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when nonexisting dutyId is sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when nonexisting dutyId is sent",
              "timedOut": false,
              "duration": 1505,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.invalidDutyId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:196:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "9317ca66-60f2-4952-aea1-669bb9c6955f",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when nonexisting personId is sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when nonexisting personId is sent",
              "timedOut": false,
              "duration": 1445,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.invalidPersonId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:208:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "599fa509-7be2-4685-9b83-8d6845f6bc0f",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when nonexisting actionId is sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when nonexisting actionId is sent",
              "timedOut": false,
              "duration": 1196,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.invalidActionId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:220:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "863f3ce3-2638-4da8-a047-7fc7962e6a1b",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when nonexisting assetId is sent",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when nonexisting assetId is sent",
              "timedOut": false,
              "duration": 1544,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.invalidAssetId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:232:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "76f1e3da-738b-437d-b652-851e979a3806",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Error when more than 1 photo is sent to existing fields",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Error when more than 1 photo is sent to existing fields",
              "timedOut": false,
              "duration": 1369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.morePhotos)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:244:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "62c71ba3-1456-4e19-8b1e-64429ec05d28",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a single Photo to a Task: Return Success when measurment field values is null",
              "fullTitle": "Ephemeral Team API's Add a single Photo to a Task: Return Success when measurment field values is null",
              "timedOut": false,
              "duration": 1274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/photo-task\")\n            .set(add_a_photo.noMeasurementValue)\n            .end((err, response) => {\n                response.should.have.status(200);\n            done();\n            });",
              "err": {},
              "uuid": "91204efb-05e7-4972-ac6f-a5f7f6c0b1ad",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It should GET List of tasks under Ephemeral Team",
              "fullTitle": "Ephemeral Team API's It should GET List of tasks under Ephemeral Team",
              "timedOut": false,
              "duration": 1850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)\n    .get(\"/dev/get-tasks-by-ephemeral-team?ephemeralTeamId=2\")\n    .end((err, response) => {\n        response.should.have.status(200);\n        \n    done();\n    });",
              "err": {},
              "uuid": "e1090a89-c481-40fe-ab3e-97a482933c2b",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Task to ET: Return Success when existing ephemeralTeamId and dutyId is sent",
              "fullTitle": "Ephemeral Team API's Add Task to ET: Return Success when existing ephemeralTeamId and dutyId is sent",
              "timedOut": false,
              "duration": 1840,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-task-to-ephemeral-team\")\n            .set(assign_a_Task_ET.validValues)\n            .end((err, response) => {\n                response.should.have.status(200);\n            done();\n            });",
              "err": {},
              "uuid": "ea016ac4-abf4-4f18-ab47-509722270c15",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Task to ET : Return Error when nonxisting ephemeralTeamId  and existing dutyId is sent",
              "fullTitle": "Ephemeral Team API's Add Task to ET : Return Error when nonxisting ephemeralTeamId  and existing dutyId is sent",
              "timedOut": false,
              "duration": 1443,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-task-to-ephemeral-team\")\n            .set(assign_a_Task_ET.invalidEphemeralTeamId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:290:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "ae35d78a-f4b8-4716-bd31-10abb1394ef2",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Task to ET : Return Error when existing ephemeralTeamId and nonexisting dutyId is sent",
              "fullTitle": "Ephemeral Team API's Add Task to ET : Return Error when existing ephemeralTeamId and nonexisting dutyId is sent",
              "timedOut": false,
              "duration": 1412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-task-to-ephemeral-team\")\n            .set(assign_a_Task_ET.invalidDutyId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:302:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "2312e920-23c5-45da-a867-cdbc7b6edf9c",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Task to ET : Return Error when nonexisting ephemeralTeamId and nonexisting dutyId is sent",
              "fullTitle": "Ephemeral Team API's Add Task to ET : Return Error when nonexisting ephemeralTeamId and nonexisting dutyId is sent",
              "timedOut": false,
              "duration": 1347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-task-to-ephemeral-team\")\n            .set(assign_a_Task_ET.invalidValues)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:314:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "8405ffad-0f06-4063-9494-4e7a172c775a",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Person to ET: Return Success when existing ephemeralTeamId and personId is sent",
              "fullTitle": "Ephemeral Team API's Add Person to ET: Return Success when existing ephemeralTeamId and personId is sent",
              "timedOut": false,
              "duration": 1731,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-persons-to-ephemeral-team\")\n            .set(add_a_person.validValues)\n            .end((err, response) => {\n                response.should.have.status(200);\n            done();\n            });",
              "err": {},
              "uuid": "aaad2476-53a0-4393-895b-897c02aae460",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Person to ET : Return Error when nonexisting ephemeralTeamId and existing personId is sent",
              "fullTitle": "Ephemeral Team API's Add Person to ET : Return Error when nonexisting ephemeralTeamId and existing personId is sent",
              "timedOut": false,
              "duration": 1439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-persons-to-ephemeral-team\")\n            .set(add_a_person.inValidephemeralTeamId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:338:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "0a45e57f-d356-4c01-a3af-08a0de250c7f",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Person to ET : Return Error when existing ephemeralTeamId and nonexisting personId is sent",
              "fullTitle": "Ephemeral Team API's Add Person to ET : Return Error when existing ephemeralTeamId and nonexisting personId is sent",
              "timedOut": false,
              "duration": 1397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-persons-to-ephemeral-team\")\n            .set(add_a_person.inValidPersonId)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:350:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "096ec9d2-14b1-4c5d-81c2-94964c8abaab",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Person to ET : Return Error when existing ephemeralTeamId and already in the team personId is sent",
              "fullTitle": "Ephemeral Team API's Add Person to ET : Return Error when existing ephemeralTeamId and already in the team personId is sent",
              "timedOut": false,
              "duration": 1231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-persons-to-ephemeral-team\")\n            .set(add_a_person.personAlreadyOntheTeam)\n            .end((err, response) => {\n                response.should.have.status(200);\n            done();\n            });",
              "err": {},
              "uuid": "7e8ce397-aa0b-4b53-b919-125efffed208",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Person to ET : Return Error when nonexisting ephemeralTeamId and nonexisting personId is sent",
              "fullTitle": "Ephemeral Team API's Add Person to ET : Return Error when nonexisting ephemeralTeamId and nonexisting personId is sent",
              "timedOut": false,
              "duration": 1361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "chai.request(process.env.BASE_URL)                \n            .post(\"/dev/add-persons-to-ephemeral-team\")\n            .set(add_a_person.inValidValues)\n            .end((err, response) => {\n                response.should.have.status(403);\n            done();\n            });",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 403 but got 200\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/test/test1.js:374:38\n    at Test.Request.callback (node_modules/superagent/lib/node/index.js:716:12)\n    at /Users/rameshrao/Library/Mobile Documents/com~apple~CloudDocs/mocha/api-testing-with-mocha-chai-master/node_modules/superagent/lib/node/index.js:916:18\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:19:7)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)",
                "diff": "- 200\n+ 403\n"
              },
              "uuid": "143bd0f4-d06f-4577-85ec-aeabec7f0043",
              "parentUUID": "f5bac25d-a45f-430e-97e0-393311b8bbbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c13c7e44-cc0f-4b8a-a67b-07f4b211577f",
            "d48d735e-4a77-4e49-bce8-35a57c2620f0",
            "91204efb-05e7-4972-ac6f-a5f7f6c0b1ad",
            "e1090a89-c481-40fe-ab3e-97a482933c2b",
            "ea016ac4-abf4-4f18-ab47-509722270c15",
            "aaad2476-53a0-4393-895b-897c02aae460",
            "7e8ce397-aa0b-4b53-b919-125efffed208"
          ],
          "failures": [
            "6e930350-725d-4b61-88cb-e34c4c4b95ca",
            "52a0153e-b14c-40d4-a2e7-e2b652414da9",
            "9317ca66-60f2-4952-aea1-669bb9c6955f",
            "599fa509-7be2-4685-9b83-8d6845f6bc0f",
            "863f3ce3-2638-4da8-a047-7fc7962e6a1b",
            "76f1e3da-738b-437d-b652-851e979a3806",
            "62c71ba3-1456-4e19-8b1e-64429ec05d28",
            "ae35d78a-f4b8-4716-bd31-10abb1394ef2",
            "2312e920-23c5-45da-a867-cdbc7b6edf9c",
            "8405ffad-0f06-4063-9494-4e7a172c775a",
            "0a45e57f-d356-4c01-a3af-08a0de250c7f",
            "096ec9d2-14b1-4c5d-81c2-94964c8abaab",
            "143bd0f4-d06f-4577-85ec-aeabec7f0043"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29729,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}